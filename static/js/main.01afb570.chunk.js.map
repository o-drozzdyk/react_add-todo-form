{"version":3,"sources":["api/users.ts","components/Form/Form.tsx","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","services.ts","components/TodoList/TodoList.tsx","api/todos.ts","App.tsx","index.tsx"],"names":["id","name","username","email","Form","onAdd","useState","count","setCount","title","setTitle","hasTitleError","setHasTitleError","selectedUser","setSelectedUser","hasSelectError","setHasSelectError","className","htmlFor","type","placeholder","value","onChange","event","target","disabled","usersFromServer","map","user","onClick","preventDefault","completed","userId","UserInfo","href","TodoInfo","todo","find","getUserById","TodoList","todos","App","todosFromServer","todoList","setTodoList","newTodo","Math","max","currentList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.01afb570.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport usersFromServer from '../../api/users';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  onAdd: (todo: Todo) => void;\n};\n\nexport const Form: React.FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [selectedUser, setSelectedUser] = useState(0);\n  const [hasSelectError, setHasSelectError] = useState(false);\n\n  function handleTitleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  }\n\n  function handleUserChange(event: React.ChangeEvent<HTMLSelectElement>) {\n    setSelectedUser(+event.target.value);\n    setHasSelectError(false);\n  }\n\n  function handleSubmit(event: React.FormEvent) {\n    event.preventDefault();\n\n    setHasTitleError(!title);\n    setHasSelectError(!selectedUser);\n\n    if (title && selectedUser) {\n      onAdd({\n        id: 0,\n        title,\n        completed: false,\n        userId: selectedUser,\n      });\n      setCount(count + 1);\n      setTitle('');\n      setSelectedUser(0);\n    }\n  }\n\n  return (\n    <form key={count}>\n      <div className=\"field\">\n        <label htmlFor=\"title\">Title: </label>\n\n        <input\n          id=\"title\"\n          type=\"text\"\n          data-cy=\"titleInput\"\n          placeholder=\"Enter a title\"\n          value={title}\n          onChange={handleTitleChange}\n        />\n\n        {hasTitleError && (\n          <span className=\"error\">Please enter a title</span>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <label htmlFor=\"user\">User: </label>\n\n        <select\n          id=\"user\"\n          data-cy=\"userSelect\"\n          value={selectedUser}\n          onChange={handleUserChange}\n        >\n          <option value=\"0\" disabled>Choose a user</option>\n          {usersFromServer.map(user => (\n            <option\n              key={user.id}\n              value={user.id}\n            >\n              {user.name}\n            </option>\n          ))}\n        </select>\n\n        {hasSelectError && (\n          <span className=\"error\">Please choose a user</span>\n        )}\n      </div>\n\n      <button\n        type=\"submit\"\n        data-cy=\"submitButton\"\n        onClick={handleSubmit}\n      >\n        Add\n      </button>\n    </form>\n  );\n};\n","import React from 'react';\nimport { User } from '../../types/User';\nimport './UserInfo.scss';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo:React.FC<Props> = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import './TodoInfo.scss';\n\nimport React from 'react';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\nimport { getUserById } from '../../services';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo:React.FC<Props> = ({ todo }) => {\n  const {\n    title,\n    completed,\n    userId,\n  } = todo;\n\n  const user = getUserById(userId);\n\n  return (\n    <article\n      className={`TodoInfo ${completed && 'TodoInfo--completed'}`}\n      data-id={todo.id}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && <UserInfo user={user} />}\n\n    </article>\n  );\n};\n","import { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport usersFromServer from './api/users';\n\nexport function getUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nexport function getNewTodoId(todos: Todo[]): number {\n  return Math.max(...todos.map(todo => todo.id)) + 1;\n}\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList:React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => <TodoInfo todo={todo} key={todo.id} />)}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import './App.scss';\n\nimport { useState } from 'react';\nimport { Form } from './components/Form';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\nimport { getNewTodoId } from './services';\n\nimport todosFromServer from './api/todos';\n\nexport const App = () => {\n  const [todoList, setTodoList] = useState<Todo[]>(todosFromServer);\n\n  const addTodo = (todo: Todo) => {\n    const newTodo = {\n      ...todo,\n      id: getNewTodoId(todoList),\n    };\n\n    setTodoList(currentList => [...currentList, newTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <Form\n        onAdd={addTodo}\n      />\n\n      <TodoList todos={todoList} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}